name: PR-Based Production Deployment

on:
  pull_request:
    branches: [main]
    types: [opened, closed]
  issues:
    types: [opened]

jobs:
  approval-request:
    name: Request PR Approval
    runs-on: ubuntu-latest
    if: github.event.action == 'opened' && github.event_name == 'pull_request'
    steps:
      - name: Send PR Approval Request
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "‚ö†Ô∏è *New PR Requires Approval* ‚ö†Ô∏è\n*Title:* ${{ github.event.pull_request.title }}\n*Author:* ${{ github.event.pull_request.user.login }}\n*Link:* <${{ github.event.pull_request.html_url }}|PR #${{ github.event.pull_request.number }}>"
                  },
                  "accessory": {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "Approve PR",
                      "emoji": true
                    },
                    "value": "approve_pr",
                    "url": "${{ github.event.pull_request.html_url }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  deploy:
    name: Deploy after Merge
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    environment: production
    permissions:
      deployments: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Trigger Vercel Deployment
        run: |
          if [ -n "${{ secrets.VERCEL_DEPLOY_HOOK_URL }}" ]; then
            echo "Triggering production deployment for merged PR..."
            curl -X POST "${{ secrets.VERCEL_DEPLOY_HOOK_URL }}"
            echo "Deployment trigger sent successfully!"
          else
            echo "Error: VERCEL_DEPLOY_HOOK_URL secret not configured"
            exit 1
          fi

      - name: Send Deployment Notification
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "üöÄ *Deployment Triggered* üöÄ\nMerged PR: <${{ github.event.pull_request.html_url }}|#${{ github.event.pull_request.number }}>\nCommit: <https://github.com/${{ github.repository }}/commit/${{ github.sha }}|${GITHUB_SHA:0:7}>\nBy: ${{ github.event.pull_request.merged_by.login }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  issue-notification:
    name: Issue Notifier
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' && github.event.action == 'opened'
    steps:
      - name: Send Issue Notification
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "‚ö†Ô∏è New issue created: <${{ github.event.issue.html_url }}|${{ github.event.issue.title }}>"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}