name: Deploy to Vercel (Dev, Production & Notifications)

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - main
    types: [opened, closed]
  issues:
    types: [opened]

jobs:
  dev-deployment:
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    steps:
      - name: Send Approval Email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "üöÄ Approval Required: Deploy to Dev"
          body: |
            A new deployment to **Dev** requires approval.

            **Details:**
            - Repository: ${{ github.repository }}
            - Branch: ${{ github.ref_name }}
            - Commit: ${{ github.sha }}
            - Triggered by: ${{ github.actor }}

            **Approve or Reject Deployment**:
            ‚úÖ Approve: [Click Here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            
            ‚ùå Reject: No action needed.
          to: "muralialakuntla3@gmail.com"
          from: "GitHub Actions <${{ secrets.EMAIL_USERNAME }}>"

      - name: Send Slack Notification
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "text": "üöÄ *Dev Deployment Approval Needed!*\n\nüîó [Approve Here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
          }' ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Awaiting Approval
        run: |
          echo "Waiting for user approval..."
          sleep 10  # Simulate waiting

      - name: User Approval
        run: echo "::notice title=Approval Needed::Please approve or reject the deployment in GitHub Actions."

      - name: Deploy to Vercel (Dev)
        run: |
          RESPONSE=$(curl -X POST "https://api.vercel.com/v1/integrations/deploy/prj_Q38cYIcXXq1HUu6JYAX98J5ZQl7G/R8gDPXUAQi")
          echo "Vercel Deployment Response: $RESPONSE"

      - name: Notify Deployment Success (Dev)
        if: success()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "‚úÖ Deployment Successful - Dev"
          body: |
            The deployment to **Dev** was successful!

            **Details:**
            - Repository: ${{ github.repository }}
            - Branch: ${{ github.ref_name }}
            - Commit: ${{ github.sha }}
            - Approved by: ${{ github.actor }}

            View changes: [Commit Details](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})
          to: "muralialakuntla3@gmail.com"
          from: "GitHub Actions <${{ secrets.EMAIL_USERNAME }}>"

  prod-deployment:
    # Triggered when:
    # - A push is made to main, or
    # - A pull request targeting main is closed and merged.
    if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: Wait for Deployment Approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: aseemkdigital
          minimum-approvals: 1
          timeout-minutes: 30 

      - name: Send Slack Notification
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            LINK="${{ github.event.pull_request.html_url }}"
            MESSAGE="üöÄ *Production Deployment Approved!*\n\nüîó [View Pull Request]($LINK)"
          else
            LINK="${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}"
            MESSAGE="üöÄ *Production Deployment Approved!*\n\nüîó [View Commit]($LINK)"
          fi
          curl -X POST -H 'Content-type: application/json' --data "{\"text\": \"$MESSAGE\"}" ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Trigger Vercel Deployment (Prod)
        run: |
          if [ -n "${{ secrets.VERCEL_DEPLOY_HOOK_URL }}" ]; then
            echo "Triggering production deployment..."
            curl -X POST "${{ secrets.VERCEL_DEPLOY_HOOK_URL }}"
            echo "Deployment trigger sent successfully!"
          else
            echo "Error: VERCEL_DEPLOY_HOOK_URL secret not configured"
            exit 1
          fi

  notify-event:
    # This job sends a Slack notification when a new pull request or issue is created.
    if: github.event_name == 'issues' || (github.event_name == 'pull_request' && github.event.action == 'opened')
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack Notification for Event
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            LINK="${{ github.event.pull_request.html_url }}"
            MESSAGE="üöÄ *New Pull Request Created!*\n\nüîó [View Pull Request]($LINK)"
          elif [ "${{ github.event_name }}" = "issues" ]; then
            LINK="${{ github.event.issue.html_url }}"
            MESSAGE="üöÄ *New Issue Created!*\n\nüîó [View Issue]($LINK)"
          fi
          curl -X POST -H 'Content-type: application/json' --data "{\"text\": \"$MESSAGE\"}" ${{ secrets.SLACK_WEBHOOK_URL }}
